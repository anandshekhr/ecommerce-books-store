pipeline {
    agent any

    parameters {
        choice(
            name: 'ENVIRONMENT',
            choices: ['Dev', 'Int','Uat', 'Prod'],
            description: 'Select the environment to build for'
        )
    }

    environment {
        GIT_REPO = "https://github.com/anandshekhr/ecommerce-books-store.git"
        COMPOSE_FILE = "deploy/docker-compose.yml"
        IMAGE_NAME="bookstore"
        TAG = "v${BUILD_NUMBER}"
    }

    stages {
        stage('Checkout Code') {
            steps {
                echo "üì• Cloning code from repository..."
                git url: "${GIT_REPO}"
            }
        }
        stage('Preparing') {
            steps {
                echo "üè∑Ô∏è Build number: ${BUILD_NUMBER}"
                echo "üì¶ Docker image tag: ${IMAGE_NAME}:${TAG}"
            }
        }

        // stage('Install Docker & Build') {
        //     steps {
        //         sh 'chmod +x deploy/shell/setup-and-build.sh'
        //         sh 'deploy/shell/setup-and-build.sh'
        //     }
        // }

        stage('Build') {
            steps {
                echo "üîß Building..."
                sh '''
                    export PATH=/usr/local/bin:$PATH
                    docker --version
                    docker-compose -f ${COMPOSE_FILE} build --build-arg BUILD_NUMBER=${TAG}
                    '''
            }
        }

        // stage('(Optional) Save Image') {
        //     when {
        //         expression { fileExists("deploy/image/Dockerfile") }
        //     }
        //     steps {
        //         echo "üíæ Saving image to archive (optional)"
        //         sh "docker save bookstore:latest -o django_app.tar"
        //     }
        // }
        stage('Post Check') {
            steps {
                sh """export PATH=/usr/local/bin:$PATH
                docker tag ${IMAGE_NAME} ${IMAGE_NAME}:${TAG}"""
            }
        }
    }

    post {
        success {
            echo "‚úÖ Docker Compose build succeeded"
        }
        failure {
            echo "‚ùå Docker Compose build failed"
        }
    }
}
